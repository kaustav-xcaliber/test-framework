version: "3.8"

services:
  # Database
  postgres:
    image: postgres:14-alpine
    container_name: api-test-framework-postgres-dev
    environment:
      POSTGRES_DB: api_test_framework
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d api_test_framework"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache
  redis:
    image: redis:7-alpine
    container_name: api-test-framework-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: api-test-framework-pgadmin-dev
    restart: always
    ports:
      - "7530:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: kaustav.karan@xcaliber.health
      PGADMIN_DEFAULT_PASSWORD: Ka@060604
    depends_on:
      - postgres
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin

  # API Test Framework
  api-server:
    build: .
    container_name: api-test-framework-server-dev
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=api_test_framework
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - LOG_LEVEL=debug
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped

volumes:
  postgres_data_dev:
  redis_data_dev:
  pgadmin_data_dev:
